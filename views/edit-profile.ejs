<!DOCTYPE html>
<html>
  <head>
    <title>New Sails App</title>
    <!-- Viewport mobile tag for sensible mobile support -->
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <!--
    Stylesheets and Preprocessors
    ==============================
    You can always bring in CSS files manually with `<link>` tags, or asynchronously
    using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
    of Sails' conventional asset pipeline (boilerplate Gruntfile).
    By default, stylesheets from your `assets/styles` folder are included
    here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
    are supported. In production, your styles will be minified and concatenated into
    a single file.
    To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
    For example, here are a few things you could do:
    + Change the order of your CSS files
    + Import stylesheets from other directories
    + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->
    <!--STYLES-->
    <link rel="stylesheet" href="/styles/angular-toastr.css">
    <link rel="stylesheet" href="/styles/bootstrap.min.css">
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->
    <script type="text/javascript">
    window.SAILS_LOCALS = {
    me: <%- JSON.stringify(me||null) %>
    };
    </script>
  </head>
  <body ng-app="brushfire" ng-controller="editProfilePageController" ng-cloak>
    <div class="container-fluid">
      <!-- Creates the navbar -->
      <nav class="navbar navbar-default navbar-inverse">
        <!-- This creates the mechanism for collapse button -->
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
        <!-- This controls the number of lines in the image when the nav collapse -->
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        <span class="icon-bar"></span>
        </button>
        <!-- This is the brand on the left-hand side. -->
        <a class="navbar-brand" href="/"> Brushfire</a>
        <div class="collapse navbar-collapse">
          <ul class="nav navbar-nav">
            <li><a href="/videos">Cat Videos</a></li>
          </ul>
          <form ng-hide="me.id" ng-submit="submitLoginForm()" class="navbar-form navbar-right">
            <div class="form-group">
              <input ng-model="loginForm.email" type="text" placeholder="Email" name="email" class="form-control">
            </div>
            <div class="form-group">
              <input ng-model="loginForm.password" type="password" placeholder="Password" name="password" class="form-control">
            </div>
            <button type="submit" class="btn btn-success">
            <span ng-show="!loginForm.loading">Sign in</span>
            <span ng-show="loginForm.loading" class="fa fa-spinner"></span>
            <span ng-show="loginForm.loading">Signing in...</span>
            </button>
            <input type="hidden" name="_csrf" value="<%= _csrf %>" />
          </form>
          <ul ng-show="me.id" class="nav navbar-nav navbar-right">
            <li class="gravatarSm"><img class="gravatarSm" ng-src="{{me.gravatarURL}}" height="30" width="30"/></li>
            <li class="activityOverlord active">
              <a href="/profile" class="pointer"> {{me.email}}</a>
            </li>
            <li>
              <a href="/logout">sign-out</a>
            </li>
          </ul>
        </div>
      </nav>
      <!-- Error state -->
      <div class="alert alert-info toggle" ng-show="userProfile.errorMsg">
        <h5>Oops!</h5>
        <p>Looks like an error occurred.</p>
        <code>
        {{userProfile.errorMsg}}
        </code>
      </div>
      <!-- Loading state -->
      <div ng-show="userProfile.loading">
        <span class="overlord-loading-spinner fa fa-spinner"></span>
        <span>Loading user data...</span>
      </div>
      <div class="row">
        <div ng-hide="loading">
          <div class="col-md-3">
            <img class="gravatarImage" ng-src={{me.gravatarURL}} />
          </div>
          <div class="col-md-3" >
            <h1> <a href="mailto:{{me.email}}">{{me.email}}</a></h1>
          </div>
        </div>
      </div>
        <!-- Error state -->
        <div class="alert alert-info toggle" ng-show="editProfile.errorMsg">
          <h5>Oops!</h5>
          <p>Looks like an error occurred.  Please try again later.</p>
          <code>
          {{editProfile.errorMsg}}
          </code>
        </div>
        <br>
        <!-- Loading state -->
        <div ng-show="editProfile.loading">
          <span class="overlord-loading-spinner fa fa-spinner"></span>
          <span>Loading user data...</span>
        </div>
        <div ng-hide="editProfile.loading">
          <div class="col-md-6">
            <div class="panel panel-default">
              <div class="panel-heading">
                <h4>Edit Profile</h4>
              </div>
              <div class="panel-body">
                <form ng-submit="updateProfile()">
                  <div class="control-group form-group col-md-12">
                    <label>Your Gravatar Url</label>
                    <input type="text" class="form-control" name="name" ng-model="me.gravatarURL">
                    <!-- <img ng-src="{{editProfile.properties.gravatarURL}}"/> -->
                  </div>
                  <button type="submit" class="btn btn-lg btn-success btn-block">
                  <span ng-show="editProfile.saving" class="overlord-loading-spinner fa fa-spinner"></span>
                  <span ng-show="editProfile.saving">Saving...</span>
                  <span ng-hide="editProfile.saving" class="btn-text">Save</span>
                  </button>
                </form>
              </div>
            </div>
            <div class="col-md-offset-3 col-md-4 text-center"><a ng-click="restore()" class="btn btn-primary">Restore Gravatar URL with current email address</a></div>
          </div>
          <div class="col-md-6">
            <div class="panel panel-default">
              <div class="panel-heading">
                <h4>Change Password</h4>
              </div>
              <div class="panel-body">
                <!-- Error state -->
                <div class="alert alert-info toggle" ng-show="editProfile.changePassword.errorMsg">
                  <h4>Oops!</h4>
                  <code>
                  {{editProfile.changePassword.errorMsg}}
                  </code>
                </div>
                <form ng-submit="changeMyPassword()">
                  <div class="control-group form-group col-md-12">
                    <label>Choose a password</label>
                    <input type="password" class="form-control" placeholder="at least 6 characters" name="password" ng-model="editProfile.properties.password" id="password">
                  </div>
                  <div class="control-group form-group col-md-12">
                    <label>Re-enter your password</label>
                    <input type="password" class="form-control" placeholder="one more time" name="confirmation" ng-model="editProfile.properties.confirmPassword">
                  </div>
                  <button type="submit" class="btn btn-lg btn-success btn-block">
                  <span ng-show="changePasswordForm.saving" class="overlord-loading-spinner fa fa-spinner"></span>
                  <span ng-show="changePasswordForm.saving">Saving...</span>
                  <span ng-hide="changePasswordForm.saving" class="btn-text">Save</span>
                  </button>
                </form>
              </div>
            </div>
          </div>
        </div>
      </div>
        <!--
        Client-side Templates
        ========================
        HTML templates are important prerequisites of modern, rich client applications.
        To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
        that you load these templates client-side.
        By default, your Gruntfile is configured to automatically load and precompile
        client-side JST templates in your `assets/templates` folder, then
        include them here automatically (between TEMPLATES and TEMPLATES END).
        To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
        + Import templates from other directories
        + Use a different template engine (handlebars, jade, dust, etc.)
        + Internationalize your client-side templates using a server-side
        stringfile before they're served.
        -->
        <!--TEMPLATES-->
        <script type="text/javascript" src="/jst.js"></script>
        <!--TEMPLATES END-->
        <!--
        Client-side Javascript
        ========================
        You can always bring in JS files manually with `script` tags, or asynchronously
        on the client using a solution like AMD (RequireJS).  Or, if you like, you can
        take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).
        By default, files in your `assets/js` folder are included here
        automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
        CoffeeScript (.coffee) are supported. In production, your scripts will be minified
        and concatenated into a single file.
        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:
        + Change the order of your scripts
        + Import scripts from other directories
        + Use a different preprocessor, like TypeScript
        -->
        <!--SCRIPTS-->
        <script src="/js/dependencies/sails.io.js"></script>
        <script src="/js/dependencies/angular.js"></script>
        <script src="/js/dependencies/angular-route.min.js"></script>
        <script src="/js/dependencies/angular-toastr.js"></script>
        <script src="/js/dependencies/compareTo.module.js"></script>
        <script src="/js/dependencies/jquery-1.11.2.min.js"></script>
        <script src="/js/dependencies/lodash.js"></script>
        <script src="/js/app.js"></script>
        <script src="/js/controllers/editProfilePageController.js"></script>
        <script src="/js/controllers/homePageController.js"></script>
        <script src="/js/controllers/profilePageController.js"></script>
        <script src="/js/controllers/restorePageController.js"></script>
        <script src="/js/controllers/signupPageController.js"></script>
        <script src="/js/controllers/videosPageController.js"></script>
        <!--SCRIPTS END-->
      </body>
    </html>